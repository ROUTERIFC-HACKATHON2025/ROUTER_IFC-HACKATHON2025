version: '3.8'

services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=routerifc
      - POSTGRES_USER=routerifc
      - POSTGRES_PASSWORD=routerifc123
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U routerifc"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build: 
      context: ./BackEnd1
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=config.production
      - DATABASE_URL=postgresql://routerifc:routerifc123@db:5432/routerifc
      - SECRET_KEY=your-super-secret-key-for-production
      - DEBUG=False
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    volumes:
      - ./BackEnd1:/app
      - static_volume:/app/staticfiles
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate --noinput &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 config.wsgi:application"

  frontend:
    build:
      context: ./FrontEnd
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./FrontEnd/dist:/usr/share/nginx/html

volumes:
  postgres_data:
  static_volume: